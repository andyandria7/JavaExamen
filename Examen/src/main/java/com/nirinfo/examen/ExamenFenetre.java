/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.nirinfo.examen;

import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author ANDI
 */
public class ExamenFenetre extends javax.swing.JFrame {

    private Connexion connexion;
    private Connection con;
    private int selectedId = 0;

    /**
     * Creates new form ExamenFenetre
     */
    public ExamenFenetre() {
        initComponents();
        connexion = new Connexion();
        con = connexion.getCon();
//        if (con == null) {
//        System.out.println("La connexion à la base de données a échoué !");
//    } else {
//        System.out.println("Connexion à la base de données réussie !");
//    }
        this.setDefaultCloseOperation(this.DISPOSE_ON_CLOSE);
        affiche();
        afficherNotes();
    }

    private void afficherNotes() {
        tNote.setModel(new javax.swing.table.DefaultTableModel(
                tabList(),
                new String[]{
                    "id", "Elèves", "Matières", "Notes", "Trimestres"
                }
        ));

    }

    String[][] tabList() {
        String[][] liste = new String[this.getNumberRow()][5];
        try {
            Statement state = con.createStatement();
            ResultSet rs = state.executeQuery(
                    "SELECT n.idNote, e.nom, e.prenom, n.nomMatiere, n.note, n.trimestre "
                    + "FROM notes n "
                    + "JOIN eleves e ON n.idEleve = e.idEleve");
            int i = 0;
            while (rs.next()) {
                liste[i][0] = rs.getString("idNote");
                liste[i][1] = rs.getString("nom") + " " + rs.getString("prenom");
                liste[i][2] = rs.getString("nomMatiere");
                liste[i][3] = rs.getString("note");
                liste[i][4] = rs.getString("trimestre");
                i++;
            }
        } catch (Exception ex) {
            Logger.getLogger(EleveFenetre.class.getName()).log(Level.SEVERE, null, ex);
        }
        return liste;
    }

    int getNumberRow() {
        Statement state;
        int n = 0;
        try {
            state = con.createStatement();
            ResultSet rs = state.executeQuery("SELECT * FROM notes");
            while (rs.next()) {
                n++;
            }

        } catch (Exception ex) {
            Logger.getLogger(EleveFenetre.class.getName()).log(Level.SEVERE, null, ex);
        }
        return n;
    }

    private void affiche() {
        try {
            PreparedStatement pstEleve = con.prepareStatement("SELECT * FROM eleves");
            ResultSet rs = pstEleve.executeQuery();
            while (rs.next()) {
                examEleve.addItem(rs.getString("nom") + " " + rs.getString("prenom"));
            }
            PreparedStatement pstMatiere = con.prepareStatement("SELECT * FROM matieres");
            ResultSet rsMatiere = pstMatiere.executeQuery();
            while (rsMatiere.next()) {
                examMatiere.addItem(rsMatiere.getString("matiere"));
            }
        } catch (SQLException ex) {
            Logger.getLogger(ExamenFenetre.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        examEleve = new javax.swing.JComboBox<>();
        examMatiere = new javax.swing.JComboBox<>();
        examNote = new javax.swing.JTextField();
        examTrimestre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tNote = new javax.swing.JTable();
        valider = new javax.swing.JButton();
        del = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        examEleve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                examEleveActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Exam");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Note");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel3.setText("Trimestre");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel4.setText("Matière");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel5.setText("Elève");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(examMatiere, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(examEleve, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(examTrimestre, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(examNote)))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(143, 143, 143)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(52, 52, 52))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(examEleve, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(examMatiere, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(examNote, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(examTrimestre, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tNote.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Elèves", "Matières", "Notes", "Trimestres"
            }
        ));
        tNote.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tNoteMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tNote);

        valider.setText("Valider");
        valider.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                validerMouseClicked(evt);
            }
        });

        del.setText("Supprimer");
        del.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                delMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(del)
                .addGap(38, 38, 38)
                .addComponent(valider)
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(valider, javax.swing.GroupLayout.DEFAULT_SIZE, 39, Short.MAX_VALUE)
                    .addComponent(del, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void examEleveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_examEleveActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_examEleveActionPerformed

    private int getIdEleve(String nomComplet) {
        try {
            String[] parts = nomComplet.split(" ");
            String nom = parts[0];
            String prenom = parts.length > 1 ? parts[1] : "";

            PreparedStatement pst = con.prepareStatement("SELECT idEleve FROM eleves WHERE nom = ? AND prenom = ?");
            pst.setString(1, nom);
            pst.setString(2, prenom);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                return rs.getInt("idEleve");
            }
        } catch (SQLException ex) {
            Logger.getLogger(ExamenFenetre.class.getName()).log(Level.SEVERE, null, ex);
        }
        return -1;
    }

    private String getNomMatiere(String matiere) {
        try {
            PreparedStatement pst = con.prepareStatement("SELECT nomMatiere FROM matieres WHERE matiere = ?");
            pst.setString(1, matiere);
            ResultSet rs = pst.executeQuery();
            if (rs.next()) {
                return rs.getString("nomMatiere");
            }
        } catch (SQLException ex) {
            Logger.getLogger(ExamenFenetre.class.getName()).log(Level.SEVERE, null, ex);
        }
        return null;
    }

    private void insererNote(int idEleve, String nomMatiere, double note, String trimestre) {
        try {
            String query = "INSERT INTO notes (idEleve, nomMatiere, note, trimestre) VALUES (?, ?, ?, ?)";
            PreparedStatement pst = con.prepareStatement(query);
            pst.setInt(1, idEleve);
            pst.setString(2, nomMatiere);
            pst.setDouble(3, note);
            pst.setString(4, trimestre);
            pst.executeUpdate();
        } catch (SQLException ex) {
            Logger.getLogger(ExamenFenetre.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Erreur lors de l'insertion de la note : " + ex.getMessage());
        }
    }

    private void validerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_validerMouseClicked
        // TODO add your handling code here:
        String selectedEleve = (String) examEleve.getSelectedItem();
        String selectedMatiere = (String) examMatiere.getSelectedItem();
        String noteText = examNote.getText();
        String trimestreText = examTrimestre.getText();

        if (selectedEleve == null || selectedMatiere == null || noteText.isEmpty() || trimestreText.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Veuillez remplir tous les champs !");
            return;
        }

        try {
            double note = Double.parseDouble(noteText);
            String trimestre = trimestreText;

            int idEleve = getIdEleve(selectedEleve);
            String nomMatiere = selectedMatiere;

            insererNote(idEleve, nomMatiere, note, trimestre);
            examNote.setText("");
            examTrimestre.setText("");
            afficherNotes();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Veuillez entrer une note et un trimestre valides.");
        }
    }//GEN-LAST:event_validerMouseClicked

    public void delete(int id) {
        try {
            PreparedStatement pst = con.prepareStatement("DELETE FROM notes WHERE idNote=?");
            pst.setInt(1, id);

            pst.executeUpdate();
        } catch (Exception e) {
        }
    }

    private void delMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_delMouseClicked
        // TODO add your handling code here:
        int ligne = tNote.getSelectedRow();
        if (ligne < 0) {
            JOptionPane.showMessageDialog(this, "Veuillez sélectionner une ligne à supprimer.");
            return;
        }

        try {
            PreparedStatement pst = con.prepareStatement("DELETE FROM notes WHERE idNote=?");
            pst.setInt(1, Integer.parseInt(tNote.getValueAt(ligne, 0).toString()));

            pst.executeUpdate();
            afficherNotes();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erreur lors de la suppression de la matière : " + e.getMessage());
        }

    }//GEN-LAST:event_delMouseClicked

    private void tNoteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tNoteMouseClicked
        // TODO add your handling code here:
        int ligne = tNote.getSelectedRow();
        if (ligne >= 0) {
            selectedId = Integer.parseInt(tNote.getValueAt(ligne, 0).toString());
        }
        ;
    }//GEN-LAST:event_tNoteMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExamenFenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExamenFenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExamenFenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExamenFenetre.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExamenFenetre().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton del;
    private javax.swing.JComboBox<String> examEleve;
    private javax.swing.JComboBox<String> examMatiere;
    private javax.swing.JTextField examNote;
    private javax.swing.JTextField examTrimestre;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tNote;
    private javax.swing.JButton valider;
    // End of variables declaration//GEN-END:variables
}
